// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SFCDentalGame.DAL;
using SFCDentalGame.DAL.Entities;
using System;

namespace SFCDentalGame.Migrations
{
    [DbContext(typeof(SFCContext))]
    partial class SFCContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("SFCDentalGame.DAL.Entities.Behaviour", b =>
                {
                    b.Property<int>("BehaviourId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BehaviourDescription");

                    b.Property<string>("BehaviourName");

                    b.Property<string>("BehaviourType");

                    b.Property<int>("CategoryId");

                    b.Property<int?>("Frequency");

                    b.Property<bool>("InPractice");

                    b.Property<double>("Points");

                    b.Property<int>("value");

                    b.HasKey("BehaviourId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Behaviour");
                });

            modelBuilder.Entity("SFCDentalGame.DAL.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId");

                    b.Property<string>("CategoryDescription");

                    b.Property<string>("CategoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("SFCDentalGame.Models.DentalHealth", b =>
                {
                    b.Property<int>("DentalHealthId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateTime");

                    b.Property<decimal>("Score");

                    b.Property<decimal>("TeethAge");

                    b.HasKey("DentalHealthId");

                    b.ToTable("DentalHealth");
                });

            modelBuilder.Entity("SFCDentalGame.Models.DentalHealthDetail", b =>
                {
                    b.Property<int>("DentalHealthDetailId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BehaviourId");

                    b.Property<string>("Comment");

                    b.Property<int>("DentalHealthId");

                    b.Property<decimal>("Points");

                    b.HasKey("DentalHealthDetailId");

                    b.HasIndex("BehaviourId");

                    b.HasIndex("DentalHealthId");

                    b.ToTable("HealthDetail");
                });

            modelBuilder.Entity("SFCDentalGame.Models.DentalPracticeItem", b =>
                {
                    b.Property<int>("DentalPracticeItemID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BehaviourId");

                    b.Property<string>("DentalPracticeId");

                    b.Property<double>("Score");

                    b.HasKey("DentalPracticeItemID");

                    b.HasIndex("BehaviourId");

                    b.ToTable("PracticeItem");
                });

            modelBuilder.Entity("SFCDentalGame.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("PlayerId");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("SFCDentalGame.DAL.Entities.Behaviour", b =>
                {
                    b.HasOne("SFCDentalGame.DAL.Entities.Category", "Category")
                        .WithMany("Behaviours")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SFCDentalGame.Models.DentalHealthDetail", b =>
                {
                    b.HasOne("SFCDentalGame.DAL.Entities.Behaviour", "Behaviour")
                        .WithMany()
                        .HasForeignKey("BehaviourId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SFCDentalGame.Models.DentalHealth", "DentalHealth")
                        .WithMany("HealthDetails")
                        .HasForeignKey("DentalHealthId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SFCDentalGame.Models.DentalPracticeItem", b =>
                {
                    b.HasOne("SFCDentalGame.DAL.Entities.Behaviour", "Behaviour")
                        .WithMany()
                        .HasForeignKey("BehaviourId");
                });
#pragma warning restore 612, 618
        }
    }
}
