// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using SFCDentalGame.DAL;
using SFCDentalGame.DAL.Entities;
using System;

namespace SFCDentalGame.Migrations
{
    [DbContext(typeof(SFCContext))]
    [Migration("20171212061922_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("SFCDentalGame.DAL.Entities.Behaviour", b =>
                {
                    b.Property<int>("BehaviourId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BehaviourDescription");

                    b.Property<string>("BehaviourName");

                    b.Property<string>("BehaviourType");

                    b.Property<int>("CategoryId");

                    b.Property<int?>("Frequency");

                    b.Property<bool>("InPractice");

                    b.Property<double>("Points");

                    b.Property<int>("value");

                    b.HasKey("BehaviourId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Behaviour");
                });

            modelBuilder.Entity("SFCDentalGame.DAL.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId");

                    b.Property<string>("CategoryDescription");

                    b.Property<string>("CategoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("SFCDentalGame.DAL.Entities.Behaviour", b =>
                {
                    b.HasOne("SFCDentalGame.DAL.Entities.Category", "Category")
                        .WithMany("Behaviours")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
